<?php

/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.11
 *
 * This file is not intended to be easily readable and contains a number of
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG
 * interface file instead.
 * ----------------------------------------------------------------------------- */

// Try to load our extension if it's not already loaded.
if (!extension_loaded('qbus')) {
  if (strtolower(substr(PHP_OS, 0, 3)) === 'win') {
    if (!dl('php_qbus.dll')) return;
  } else {
    // PHP_SHLIB_SUFFIX gives 'dylib' on MacOS X but modules are 'so'.
    if (PHP_SHLIB_SUFFIX === 'dylib') {
      if (!dl('qbus.so')) return;
    } else {
      if (!dl('qbus.'.PHP_SHLIB_SUFFIX)) return;
    }
  }
}



/* PHP Proxy Classes */
class StringVector {
	public $_cPtr=null;
	protected $_pData=array();

	function __set($var,$value) {
		if ($var === 'thisown') return swig_qbus_alter_newobject($this->_cPtr,$value);
		$this->_pData[$var] = $value;
	}

	function __get($var) {
		if ($var === 'thisown') return swig_qbus_get_newobject($this->_cPtr);
		return $this->_pData[$var];
	}

	function __isset($var) {
		if ($var === 'thisown') return true;
		return array_key_exists($var, $this->_pData);
	}

	function __construct($n=null) {
		if (is_resource($n) && get_resource_type($n) === '_p_std__vectorT_std__string_t') {
			$this->_cPtr=$n;
			return;
		}
		switch (func_num_args()) {
		case 0: $this->_cPtr=new_StringVector(); break;
		default: $this->_cPtr=new_StringVector($n);
		}
	}

	function size() {
		return StringVector_size($this->_cPtr);
	}

	function capacity() {
		return StringVector_capacity($this->_cPtr);
	}

	function reserve($n) {
		StringVector_reserve($this->_cPtr,$n);
	}

	function clear() {
		StringVector_clear($this->_cPtr);
	}

	function push($x) {
		StringVector_push($this->_cPtr,$x);
	}

	function is_empty() {
		return StringVector_is_empty($this->_cPtr);
	}

	function pop() {
		return StringVector_pop($this->_cPtr);
	}

	function get($i) {
		return StringVector_get($this->_cPtr,$i);
	}

	function set($i,$val) {
		StringVector_set($this->_cPtr,$i,$val);
	}
}

class QbusProducer {
	public $_cPtr=null;
	protected $_pData=array();

	function __set($var,$value) {
		if ($var === 'thisown') return swig_qbus_alter_newobject($this->_cPtr,$value);
		$this->_pData[$var] = $value;
	}

	function __get($var) {
		if ($var === 'thisown') return swig_qbus_get_newobject($this->_cPtr);
		return $this->_pData[$var];
	}

	function __isset($var) {
		if ($var === 'thisown') return true;
		return array_key_exists($var, $this->_pData);
	}

	function __construct($res=null) {
		if (is_resource($res) && get_resource_type($res) === '_p_qbus__QbusProducer') {
			$this->_cPtr=$res;
			return;
		}
		$this->_cPtr=new_QbusProducer();
	}

	function init($cluster_name,$log_path,$config_path,$topic_name) {
		return QbusProducer_init($this->_cPtr,$cluster_name,$log_path,$config_path,$topic_name);
	}

	function uninit() {
		QbusProducer_uninit($this->_cPtr);
	}

	function produce($data,$data_len,$key) {
		return QbusProducer_produce($this->_cPtr,$data,$data_len,$key);
	}
}

class QbusMsgContentInfo {
	public $_cPtr=null;
	protected $_pData=array();

	function __set($var,$value) {
		$func = 'QbusMsgContentInfo_'.$var.'_set';
		if (function_exists($func)) return call_user_func($func,$this->_cPtr,$value);
		if ($var === 'thisown') return swig_qbus_alter_newobject($this->_cPtr,$value);
		$this->_pData[$var] = $value;
	}

	function __get($var) {
		$func = 'QbusMsgContentInfo_'.$var.'_get';
		if (function_exists($func)) return call_user_func($func,$this->_cPtr);
		if ($var === 'thisown') return swig_qbus_get_newobject($this->_cPtr);
		return $this->_pData[$var];
	}

	function __isset($var) {
		if (function_exists('QbusMsgContentInfo_'.$var.'_get')) return true;
		if ($var === 'thisown') return true;
		return array_key_exists($var, $this->_pData);
	}

	function __construct($res=null) {
		if (is_resource($res) && get_resource_type($res) === '_p_qbus__QbusMsgContentInfo') {
			$this->_cPtr=$res;
			return;
		}
		$this->_cPtr=new_QbusMsgContentInfo();
	}
}

class QbusConsumer {
	public $_cPtr=null;
	protected $_pData=array();

	function __set($var,$value) {
		if ($var === 'thisown') return swig_qbus_alter_newobject($this->_cPtr,$value);
		$this->_pData[$var] = $value;
	}

	function __get($var) {
		if ($var === 'thisown') return swig_qbus_get_newobject($this->_cPtr);
		return $this->_pData[$var];
	}

	function __isset($var) {
		if ($var === 'thisown') return true;
		return array_key_exists($var, $this->_pData);
	}

	function __construct($res=null) {
		if (is_resource($res) && get_resource_type($res) === '_p_qbus__QbusConsumer') {
			$this->_cPtr=$res;
			return;
		}
		$this->_cPtr=new_QbusConsumer();
	}

	function init($cluster_name,$log_path,$config_path) {
		return QbusConsumer_init($this->_cPtr,$cluster_name,$log_path,$config_path);
	}

	function subscribe($group,$topics) {
		return QbusConsumer_subscribe($this->_cPtr,$group,$topics);
	}

	function subscribeOne($group,$topics) {
		return QbusConsumer_subscribeOne($this->_cPtr,$group,$topics);
	}

	function start() {
		return QbusConsumer_start($this->_cPtr);
	}

	function stop() {
		QbusConsumer_stop($this->_cPtr);
	}

	function consume($msg_content_info) {
		return QbusConsumer_consume($this->_cPtr,$msg_content_info);
	}

	function commitOffset($qbusMsgContentInfo) {
		QbusConsumer_commitOffset($this->_cPtr,$qbusMsgContentInfo);
	}
}


?>
